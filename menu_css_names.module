<?php

use Drupal\Component\Utility\Unicode;

function menu_css_names_theme($existing, $type, $theme, $path) {
  return [
    'menu_css_names__menu' => [
      'template' => 'menu-css-names--menu',
      'base hook' => 'menu',
    ],
  ];
}

/**
 * @param array $suggestions
 * @param array $variables
 */
function menu_css_names_theme_suggestions_menu_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'menu_css_names__menu';
}

/**
 * Implements hook_preprocess_HOOK() for menu templates.
 */
function menu_css_names_preprocess_menu(&$variables) {
  if($variables['menu_name'] == 'main') {
    $items = $variables['items'];
    foreach($items as $menu_id => $item) {
      $items[$menu_id]['menu_name_class'] = _make_class_name($items[$menu_id]['title']);
    }
    $variables['items'] = $items;
  }
}

/**
 * Implements hook_preprocess_HOOK() for menu_local_task templates.
 */
function menu_css_names_preprocess_menu_local_task(&$variables) {
  $title = $variables['element']['#link']['title'];
  $variables['attributes']['class'][] =  _make_class_name($title);
}
function menu_css_names_preprocess_menu_local_action(&$variables) {
  $title = $variables['element']['#link']['title'];
  $variables['attributes']['class'][] =  _make_class_name($title);
}

/**
 * @param $text
 * @return mixed|string
 *
 * Helper function to build class names, with tags and other characters stripped
 * out.
 */
function _make_class_name($text) {
	// Do main text conversion to class name,
	// then remove double hyphens or hyphens at beginning or end of class name
	$text = Unicode::strtolower(preg_replace('/(\s?&amp;\s?|[^-_\w\d])/i', '-', trim(strip_tags($text))));
	$text = preg_replace('/(^-+|-+$)/', '', $text);
	$text = preg_replace('/--+/', '-', $text);
	return $text;
}